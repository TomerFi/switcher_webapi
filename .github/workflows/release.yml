---
name: Release

on:
  workflow_dispatch:
    inputs:
      title:
        description: "Release title"
        required: false
      tweet:
        description: "Tweet new release?"
        required: false
        default: "no"

jobs:
  release:
    runs-on: ubuntu-latest
    environment: deployment
    name: Build, publish, release, and announce
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.DEPLOY_KEY }}

      - name: Configure git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip repository
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt', 'requirements_docs.txt') }}

      - name: Prepare python environment
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt -r requirements_docs.txt

      - name: Build documentation site
        run: mkdocs build

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile') }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.4.0

      - name: Login to DockerHub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Determine next SemVer
        id: bumper
        uses: tomerfi/version-bumper-action@1.2.2

      - name: Set new project version
        # yamllint disable rule:line-length
        # editorconfig-checker-disable
        run: |
          echo "${{ steps.bumper.outputs.new_version }}" > VERSION
          sed -i 's/  version: .*/  version: "${{ steps.bumper.outputs.new_version }}"/g' mkdocs.yml
        # yamllint enable rule:line-length
        # editorconfig-checker-enable

      - name: Commit, tag, and push
        run: |
          git add VERSION
          git add mkdocs.yml
          git commit -m "build: bump version to ${{ steps.bumper.outputs.new_version }}"
          git push

      - name: Get current date
        id: current_date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Build images and push to DockerHub
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm/v7
          tags: |
            tomerfi/switcher_webapi:latest
            tomerfi/switcher_webapi:${{ steps.bumper.outputs.new_version }}
          build-args: |
            VCS_REF=${{ github.sha }}
            BUILD_DATE=${{ steps.current_date.outputs.date }}
            VERSION=${{ steps.bumper.outputs.new_version }}
          cache-from: |
            type=local,src=/tmp/.buildx-cache
            ghcr.io/tomerfi/switcher_webapi:early-access
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Create a release name
        id: release_name
        uses: actions/github-script@v6
        with:
          script: |
            var retval = '${{ steps.bumper.outputs.new_version }}'
            if ('${{ github.event.inputs.title }}') {
              retval = retval.concat(' - ${{ github.event.inputs.title }}')
            }
            core.setOutput('value', retval)

      - name: Create a release
        id: gh_release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.RELEASE_PAT }}
          script: |
            const repo_name = context.payload.repository.full_name
            const response = await github.request('POST /repos/' + repo_name + '/releases', {
              tag_name: '${{ steps.bumper.outputs.new_version }}',
              name: '${{ steps.release_name.outputs.value }}',
              generate_release_notes: true
            })
            core.setOutput('html_url', response.data.html_url)

      - name: Set development project version
        run: echo "${{ steps.bumper.outputs.next_dev_iteration }}" > VERSION

      - name: Commit and push
        # yamllint disable rule:line-length
        # editorconfig-checker-disable
        run: |
          git add VERSION
          git commit -m "build: bump version to ${{ steps.bumper.outputs.next_dev_iteration }} [skip ci]"
          git push
        # yamllint enable rule:line-length
        # editorconfig-checker-enable

      - name: Tweet new release
        if: ${{ github.event.inputs.tweet == 'yes' }}
        uses: lazy-actions/tweet-action@1.0.1
        with:
          oauth_consumer_key: ${{ secrets.TWITTER_API_KEY }}
          oauth_consumer_secret: ${{ secrets.TWITTER_API_SECRET_KEY }}
          oauth_token: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          oauth_token_secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          message: |
            ðŸš€ðŸŽ‰ Switcher_webapi ${{ steps.bumper.outputs.new_version }} has been released! ðŸŽ‰ðŸš€
            ${{ steps.gh_release.outputs.html_url }}

            #switcher_webapi #smarthome
