---
name: Pull request build

on:
  pull_request_target:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.9]
    name: Verify project with Python ${{ matrix.python }}
    steps:
      - name: Source checkout
        uses: actions/checkout@v2.3.4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python }}

      - name: Cache pip repository
        uses: actions/cache@v2.1.6
        with:
          path: ~/.cache/pip
          # yamllint disable-line rule:line-length
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/requirements_test.txt') }}-${{ matrix.python }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python }}-pip-

      - name: Upgrade pip
        run: pip install --upgrade pip

      - name: Install dependencies
        run: pip install -rrequirements.txt -rrequirements_test.txt

      - name: Lint yaml files
        run: yamllint --config-file .yamllint --format colored --strict .

      - name: Security check code with bandit
        run: bandit -rvc .bandit setup.py switcher_webapi/ docs/ -l -ii

      - name: Validate imports with isort
        run: isort --check-only setup.py switcher_webapi/ docs/

      - name: Lint code with flake8
        run: flake8 --statistics --count --doctests setup.py switcher_webapi/ docs/

      - name: Check code style with black
        run: black --line-length 79 --check setup.py setup.py switcher_webapi/ docs/

      - name: Check static typing with mypy
        run: mypy --ignore-missing-imports --follow-imports silent setup.py switcher_webapi/ docs/

      - name: Lint rst files
        run: doc8 --allow-long-titles --max-line-length 100 docs

      - name: Perform unit tests with coverage report
        run: |
          pytest -vs --cov \
          --cov-config=.coveragerc \
          --cov-report=xml:coverage.xml \
          --junit-xml junit.xml

      - name: Publish unit test report to GitHub
        uses: EnricoMi/publish-unit-test-result-action@v1.17
        if: always()
        with:
          test_changes_limit: 0
          files: junit.xml

      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: coverage-report
          path: ./coverage.xml

  coverage:
    runs-on: ubuntu-latest
    name: Push coverage report to CodeCov
    needs: [build]
    steps:
      - name: Source checkout
        uses: actions/checkout@v2.3.4

      - name: Download coverage report from artifacts
        uses: actions/download-artifact@v2
        with:
          name: coverage-report

      - name: Push to CodeCov
        uses: codecov/codecov-action@v1.5.2
        with:
          file: coverage.xml
          fail_ci_if_error: true
